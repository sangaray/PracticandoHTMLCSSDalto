/*
  FLEX DIRECTION
  A la caja padre le damos un display flex y los elementos dentro de ella se alinean

  Los flex-ítems se pueden enconger pero no pueden crecer más alla del tamaño que se les dió en el width o en el height
  Todo lo que pasa con los elementos dentro de la caja se puede definir
  Si definimos a los elementos por su padding ya la caja deja de ser flexible

  Por defecto el alto del cross axis se ocupa por completo y si no le doy un width toma el 100% del ancho de la pantalla, alo alto van a ocupar todo el cross axis. Si usamos column van a ocupar todo el ancho. Para esto no hay que definir el width, si lo hacemos podemos hacer que los elementos se centren

  Propiedades;
  display: flex va en la caja padre la hace flexible para su contenido

  flex-direction: row es la propiedad por defecto del flexbox, los elementos se ordena en fila en la dirección del texto

  flex-direction:row-reverse va en la caja padre, e invierte la dirección de los ítems, van en contra de la dirección del texto

  flex-direction: column los elementos se acomodan de arriba hacia abajo y mantienen su width

  flex-direction: column-reverse los elementos se acomodan de abajo hacia arriba y mantienen su width

  direction: con row define la dirección del texto en la página, con column cambia la posición de los items en el cross axis solamente

  Nosotros lo vamos a ver left to right, pero los otros lenguajes no

  direction: ltr (left to right) o rtl (right to left) para escribir en la dirección del texto del idioma utilizado
*/

body {
  margin: 0;
  font-family: sans-serif;
}

.flexbox {
  display: flex;
  flex-direction: row-reverse;
}

.flex-item {
  width: 180px;
  background-color: #800;
  margin: 10px;
  color: #fff;
  font-size: 40px;
  text-align: center;
}

.flex-item:first-child {
  background-color: #f77;
}
.flex-item:last-child {
  background-color: #000;
}
