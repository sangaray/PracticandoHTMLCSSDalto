/*
  ANIMACIONES
  Proceso que quiere generar una ilusión de movimiento, tomar un objeto inanimado y hacerlo animado. Es como una transición entre un estado inicial y un estado final y en el medio pueden pasar más cosas. Tomar un elemento y hacerlo pasar de un estado a otro a través del tiempo.
  Se usa para mejorar la interrelación con el usuario, la gente de UX lo usa para mejorar la experiencia y también en cargas que tardan para mejorar la espera

  Transiciones ocurre sólo cuando hay un cambio de estado, necesitan un evento disperador que diga que están en un estado y ahora pasaron a otro estado. La transición sólo se repite una vez y es de un estado a otro

  ESTRUCTURA
  @keyframes nombre{
    from{
      propiedad: valor
    }
    to{
    propiedad: valor
    }
  }
  En lugar de from y to se pueden usar porcentajes, también se pueden agregar porcentajes o puntos intermedios de animación

  Las animaciones las podemos ejecutar cuando queramos, incluso pueden ser automáticas, podemos cambiar más veces las propiedades, controlar los cambios. También se pueden repetir todas las veces que queramos, incluso infinitamente

  PROPIEDADES
  - animation-name: nombre dado a la animación
  - animation-duration: tiempo que va a durar la animación
  Estas dos propiedades tienen que estar sí o sí en el elemento al que se le aplica la animación
  - animation-delay es el tiempo que tarda en comenzar a ejecutarse la animación. Se puede dar números negativos, al hacer esto es como si la animación hubiera arrancado hace el tiempo indicado en negativo. El dilay por defecto es 0, arranca en 0 y termina en el valor de la duración-1. Se aplica siempre sólo la primera vez que carga o se ejecuta la la animación
  - animation-fill-mode dice cómo va a quedar la animación una vez termine de ejecutarse
    backwards se queda como estaba antes de la animación
    none es como backwards se queda como antes de la animación
    both se queda como está al final de la animación y arranca como le indique la propiedad from. Arranca con el from dela nimación duante el delay incluido
    backwards espera el dilay como estaba y arranca con las propiedades de from
  - animation-timing-function indica el flujo de la animación
    linear toda la animación es pareja
    por defecto arranca rápido y termina más lento
  - animation-iteration-count determina cuantas veces se va a repetir la animación
    infinite repite la animación siempre
    por defecto viene 1
    puedo dar la cantidad específica que quiero
  - animation-direction indica hacia donde se dirige la animación
    reverse del final al principio o de atrás para adelante
    normal es la opción por defecto
    alternate va primero de adelante para atrás y luego de atrás para adelante. 
    alternate-reverse va de atras hacia adelante y de adelante hacia atrás
  - animation-play-state permite que se pueda manipular la animación
    paused detiene la animación mientras haya un estado específico
    running es la opción por defecto que mantiene la animación ejecutándose
*/

body {
  margin: 0;
  font-family: sans-serif;
  background-color: #ccc;
}

div {
  box-sizing: border-box;
}

.box {
  margin: 20px;
  background-color: #fff;
  border: 3px solid #0009;
  padding: 6px;
  border-radius: 39px;
}

.barra {
  padding: 40px;
  background-color: #48e;
  border-radius: 30px;
  width: 10%;
  animation-name: llenar-barra;
  animation-duration: 1s;
  animation-delay: 1s;
  animation-fill-mode: both;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

.barra:active {
  animation-play-state: paused;
}

@keyframes llenar-barra {
  from {
    width: 0%;
  }

  to {
    width: 100%;
    background-color: #f33;
  }
}
